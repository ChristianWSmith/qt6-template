name: Build Qt CMake Project

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  QT_VERSION: 6.9.1
  PYTHON_VERSION: 3.13
  BUILD_DIR: build

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
            - os: ubuntu-latest
              compiler_name: linux_gcc_64
              compiler_dir: gcc_64
              aqt_platform: linux
            - os: windows-latest
              compiler_name: win64_msvc2022_64
              compiler_dir: msvc2022_64
              aqt_platform: windows
            - os: macos-latest
              compiler_name: clang_64
              compiler_dir: macos
              aqt_platform: mac

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install OpenGL (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev

    - name: Confirm OpenGL (macOS)
      if: runner.os == 'macOS'
      run: system_profiler SPSoftwareDataType

    - name: Configure MSVC environment (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Qt
      shell: bash
      run: |
        pip install aqtinstall
        export INSTALL_DIR="${{ runner.temp }}/Qt"
        if [[ "${{ runner.os }}" == "Windows" ]]; then
            export INSTALL_DIR=$(cygpath -w "$INSTALL_DIR")
        fi
        aqt install-qt ${{ matrix.aqt_platform }} desktop ${{ env.QT_VERSION }} ${{ matrix.compiler_name }} -O $INSTALL_DIR

    - name: Configure and Build
      shell: bash
      run: |
        export QT_DIR="${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/${{ matrix.compiler_dir }}/lib/cmake/Qt6"
        if [[ "${{ runner.os }}" == "Windows" ]]; then
            export QT_DIR=$(cygpath -w "$QT_DIR")
        fi
        cmake -B ${{ env.BUILD_DIR }} -DCMAKE_PREFIX_PATH=$QT_DIR -DQT_DEBUG_FIND_PACKAGE=ON
        cmake --build ${{ env.BUILD_DIR }} --parallel --config Release

    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: MyApp-${{ matrix.os }}
        path: |
          ${{ env.BUILD_DIR }}/MyApp
          ${{ env.BUILD_DIR }}/MyApp.app
          ${{ env.BUILD_DIR }}/Release/MyApp.exe
